,visitingScore = cleanText(visitingScore)
,homeScore = cleanText(homeScore)
,GameTime = cleanText(time[timeW[scoreTextW]])
,TeamID = cleanText(teamId[teamIdW[scoreTextW]])
,Quarter = cleanText(shortTitle[shortTitleW[scoreTextW]])
,stringsAsFactors = FALSE
) %>%
mutate(
visitingScore = cleanScores(visitingScore)
,homeScore = cleanScores(homeScore)
)
PosessionsT
Possesions
QuartersT <- grepl('Quarter Play', pbpDirty$V1)
PosessionsT <- grepl('([a-zA-Z]{1,50}) at ([0-9]{1,2}\\:[0-9]{2,})', pbpDirty$V1)
PosessionsT
PossesionString <- '([a-zA-Z]{1,50}) at ([0-9]{1,2}\\:[0-9]{2,})'
PosessionsT <- grepl(PossesionString, pbpDirty$V1)
Possesions <- pbpDirty[PosessionsT,]
PossesionsW <- which(PosessionsT)
Possesions
Possesions <- pbpDirty[PosessionsT,'V1']
Possesions
Possesions <- gsub(PossesionString, '//1', pbpDirty[PosessionsT,'V1'])
Possesions
Possesions <- gsub(PossesionString, '\\1', pbpDirty[PosessionsT,'V1'])
Possesions
Possesions <- gsub(PossesionString, '\\2', pbpDirty[PosessionsT,'V1'])
Possesions
QuartersT <- grepl('Quarter Play', pbpDirty$V1)
QuartersT
Quarters <- pbpDirty[QuartersT,]
Quarters
QuartersW <- which(QuartersT)
QuartersW
cumsum(which(QuartersT))
cumsum(QuartersT)
pbpDirty$V1
QuartersT
pbpDirty[QuartersT,]
pbpDirty[QuartersT,'V1']
QuartersT2 <- !duplicated(pbpDirty[QuartersT,'V1'])
QuartersT2
QuartersT <- grepl('Quarter Play', pbpDirty$V1) & !duplicated(pbpDirty$V1)
QuartersT
QuartersW <- cumsum(QuartersT)
QuartersW
QuartersT
pbpDirty
Quarters <- pbpDirty[QuartersT,]
Quarters
data.frame(
scoreText = cleanText(scoreText)
,driveText = cleanText(driveText)
,visitingScore = cleanText(visitingScore)
,homeScore = cleanText(homeScore)
,GameTime = cleanText(time[timeW[scoreTextW]])
,TeamID = cleanText(teamId[teamIdW[scoreTextW]])
,Quarter = cleanText(shortTitle[shortTitleW[scoreTextW]])
,stringsAsFactors = FALSE
) %>%
mutate(
visitingScore = cleanScores(visitingScore)
,homeScore = cleanScores(homeScore)
) %>% View
data.frame(
scoreText = cleanText(scoreText)
,driveText = cleanText(driveText)
,visitingScore = cleanText(visitingScore)
,homeScore = cleanText(homeScore)
,GameTime = cleanText(time[timeW[scoreTextW]])
,TeamID = cleanText(teamId[teamIdW[scoreTextW]])
,Quarter = cleanText(shortTitle[shortTitleW[scoreTextW]])
,stringsAsFactors = FALSE
) %>%
mutate(
visitingScore = cleanScores(visitingScore)
,homeScore = cleanScores(homeScore)
) %>% View
pbpDirty$V3
pbpDirty$V4
cleanScores
library(cfb)
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
)
pbpDirty$V3
trim
FPD::trim
library(cfb)
cleanScores(pbpDirty$V3)
pbpDirty$V3
as.cahracter(pbpDirty$V3)
as.character(pbpDirty$V3)
as.numeric(as.character(pbpDirty$V3))
suppressWarnings(as.numeric(as.character(pbpDirty$V3)))
library(cfb)
cleanScores(pbpDirty$V3)
library(cfb)
cleanScores(pbpDirty$V3)
pbpDirty$V3
cleanScores(pbpDirty$V3)
x = pbpDirty$V3
Scores <- suppressWarnings(as.numeric(as.character(x)))
Scores
cummax(ifelse(is.na(x), 0, x))
ifelse(is.na(x), 0, x)
cummax(ifelse(is.na(Scores), 0, Scores))
library(cfb)
scoreText <- raw[grepl('"scoreText"', raw)]
scoreTextW <- which(grepl('"scoreText"', raw))
driveText <- raw[grepl('"driveText"', raw)]
visitingScore <- raw[grepl('"visitingScore"', raw)]
homeScore <- raw[grepl('"homeScore"', raw)]
teamId <- raw[grepl('"teamId"', raw)]
teamIdW <- cumsum(grepl('"teamId"', raw))
time <- raw[grepl('"time"', raw)]
timeW <- cumsum(grepl('"time"', raw))
shortTitle <- raw[grepl('"shortTitle"', raw)]
shortTitleW <- cumsum(grepl('"shortTitle"', raw))
data.frame(
scoreText = cleanText(scoreText)
,driveText = cleanText(driveText)
,visitingScore = cleanText(visitingScore)
,homeScore = cleanText(homeScore)
,GameTime = cleanText(time[timeW[scoreTextW]])
,TeamID = cleanText(teamId[teamIdW[scoreTextW]])
,Quarter = cleanText(shortTitle[shortTitleW[scoreTextW]])
,stringsAsFactors = FALSE
) %>%
mutate(
visitingScore = cleanScores(visitingScore)
,homeScore = cleanScores(homeScore)
)
cleanScores(pbpDirty$V3)
cleanScores(pbpDirty$V4)
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
)
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
) %>% View
cleanScores(pbpDirty$V3)
time
Possesions
time
timeW
time
PosessionsT
gsub(PossesionString, '\\2', pbpDirty[PosessionsT,'V1'])
time
time <- gsub(PossesionString, '\\2', pbpDirty[PosessionsT,'V1'])
timeW <- cumsum(PosessionsT)
time[timeW[scoreTextW]]
scoreTextW
time[timeW[scoreTextW]]
time[timeW]
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
) %>% View
length(time[timeW])
length(cleanScores(pbpDirty$V4))
timeW
length(timeW)
time
time[timeW]
time
timeW
length(timeW)
time[28]
time[0]
timeW[timeW == 0] = 1
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
) %>% View
shortTitle
QuartersT
QuartersW
QuartersW[QuartersW == 0] = 1
QuartersT
QuartersW
factor(QuartersW)
factor(QuartersW, c('1st', '2nd', '3rd', '4th'))
factor(QuartersW, labels = c('1st', '2nd', '3rd', '4th'))
as.character(factor(QuartersW, labels = c('1st', '2nd', '3rd', '4th')))
QuartersW
shortTitleW <- as.character(factor(QuartersW, labels = c('1st', '2nd', '3rd', '4th')))
shortTitleW
QuartersText <- as.character(factor(QuartersW, labels = c('1st', '2nd', '3rd', '4th')))
QuartersW
time
QuartersText <- c('1st', '2nd', '3rd', '4th')
QuartersText[QuartersW]
pbpDirty
pbpDirty %>% View
data.frame(
scoreText = cleanText(scoreText)
,driveText = cleanText(driveText)
,visitingScore = cleanText(visitingScore)
,homeScore = cleanText(homeScore)
,GameTime = cleanText(time[timeW[scoreTextW]])
,TeamID = cleanText(teamId[teamIdW[scoreTextW]])
,Quarter = cleanText(shortTitle[shortTitleW[scoreTextW]])
,stringsAsFactors = FALSE
) %>%
mutate(
visitingScore = cleanScores(visitingScore)
,homeScore = cleanScores(homeScore)
) %>% View
PossesionString
PosessionsT
Team <- gsub(PossesionString, '\\1', pbpDirty[PosessionsT,'V1'])
Team
time
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
)
filter(pbpDirty) %>% View
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(!grepl('Quarter Play', scoreText)) %>% View
PosessionsT
pbpDirty[PosessionsT]
pbpDirty[PosessionsT,]
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(!grepl('Quarter Play', scoreText) & !PosessionsT) %>% View
PosessionsT
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(!grepl('Quarter Play', scoreText) & !PosessionsT) %>% View
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(
!grepl('Quarter Play', scoreText) &
!PosessionsT &
! grepl('wins toss', driveText)) %>%
View
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(
!grepl('Quarter Play', scoreText) &
!PosessionsT &
! grepl('wins the toss', driveText)) %>%
View
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(
!grepl('Quarter Play|DRIVE TOTALS', scoreText) &
!PosessionsT &
! grepl('wins the toss', driveText)) %>%
View
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(
!grepl('Quarter Play|DRIVE TOTALS', scoreText) &
!PosessionsT &
! grepl('wins the toss|End of', driveText)) %>%
View
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(
!grepl('Quarter Play|DRIVE TOTALS', scoreText) &
!PosessionsT &
! grepl('wins the toss|End of', driveText)) %>%
#     mutate(
#       ifelse(grepl('Timeout'), gsub('([0-9]{1,2}:[0-9]{1,2})'))
#     ) %>%
View
Text <- 'Timeout MONTANA, clock 02:05'
gsub('([0-9]{1,2}:[0-9]{1,2})', Text)
gsub('([0-9]{1,2}:[0-9]{1,2})', '', Text)
gsub('(^[0-9]{1,2}:[0-9]{1,2})', '', Text)
gsub('^[[0-9]{1,2}:[0-9]{1,2}]', '', Text)
gsub('[^[0-9]{1,2}:[0-9]{1,2}]', '', Text)
gsub('[^0-9|:]', '', Text)
time
PossesionString
grepl(PossesionString, pbpDirty$V1)
PosessionsT <- grepl(PossesionString, pbpDirty$V1) | grepl('Timeout', pbpDirty$V2)
PosessionsT
paste0(pbpDirty$V1, pbpDirty$V2)
gsub('[^0-9|:]', '', paste0(pbpDirty$V1, pbpDirty$V2))
gsub('([0-9]{1,2}\\:[0-9]{2,})', '', paste0(pbpDirty$V1, pbpDirty$V2))
gsub('([0-9]{1,2}\\:[0-9]{1,2})', '', paste0(pbpDirty$V1, pbpDirty$V2))
gsub('[0-9]{1,2}\\:[0-9]{1,2}', '', paste0(pbpDirty$V1, pbpDirty$V2))
gsub('([0-9]{1,2}\\:[0-9]{1,2})', '\\1', paste0(pbpDirty$V1, pbpDirty$V2))
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(
!grepl('Quarter Play|DRIVE TOTALS', scoreText) &
!PosessionsT &
! grepl('wins the toss|End of', driveText)) %>%
View
PossesionString <- '([a-zA-Z]{1,50}) at ([0-9]{1,2}\\:[0-9]{2,})'
PosessionsT <- grepl(PossesionString, pbpDirty$V1)
Team <- gsub(PossesionString, '\\1', pbpDirty[PosessionsT,'V1'])
time <- gsub(PossesionString, '\\2', pbpDirty[PosessionsT,'V1'])
timeW <- cumsum(PosessionsT)
timeW[timeW == 0] = 1
QuartersT <- grepl('Quarter Play', pbpDirty$V1) & !duplicated(pbpDirty$V1)
QuartersW <- cumsum(QuartersT)
QuartersW[QuartersW == 0] = 1
QuartersText <- c('1st', '2nd', '3rd', '4th')
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(
!grepl('Quarter Play|DRIVE TOTALS', scoreText) &
!PosessionsT &
! grepl('wins the toss|End of', driveText)) %>%
View
data.frame(
scoreText = pbpDirty$V1
,driveText = pbpDirty$V2
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(
!grepl('Quarter Play|DRIVE TOTALS', scoreText) &
!PosessionsT &
! grepl('wins the toss|End of|Timeout', driveText)) %>%
View
data.frame(
scoreText = ifelse(grepl('Â', pbpDirty$V1), NA, pbpDirty$V1)
,driveText = ifelse(grepl('Â', pbpDirty$V2), NA, pbpDirty$V2)
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(
!grepl('Quarter Play|DRIVE TOTALS', scoreText) &
!PosessionsT &
! grepl('wins the toss|End of|Timeout', driveText)) %>%
View
data.frame(
scoreText = ifelse(grepl('Â', pbpDirty$V1), NA, as.character(pbpDirty$V1))
,driveText = ifelse(grepl('Â', pbpDirty$V2), NA, as.character(pbpDirty$V2))
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(
!grepl('Quarter Play|DRIVE TOTALS', scoreText) &
!PosessionsT &
! grepl('wins the toss|End of|Timeout', driveText)) %>%
View
pbpDirty %>% View
theurl
data.frame(
scoreText = ifelse(grepl('Â', pbpDirty$V1), NA, as.character(pbpDirty$V1))
,driveText = ifelse(grepl('Â', pbpDirty$V2), NA, as.character(pbpDirty$V2))
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(
!grepl('Quarter Play|DRIVE TOTALS', scoreText) &
!PosessionsT &
! grepl('wins the toss|End of|Timeout', driveText)) %>%
View
pbpPage<-htmlParse(paste0("http://scores.espn.go.com/",byYear$pbpLink[t], "&period=0"))
gtl<-getNodeSet(pbpPage, "//div[@class='game-time-location']/p")
timeLoc <- sapply(gtl, xmlValue)
theurl = paste0("http://scores.espn.go.com/",byYear$pbpLink[t], "&period=0")
tree <- htmlTreeParse(theurl, isURL=TRUE, useInternalNodes=TRUE)
pbpDirty <- readHTMLTable(theurl)[[2]]
PossesionString <- '([a-zA-Z]{1,50}) at ([0-9]{1,2}\\:[0-9]{2,})'
PosessionsT <- grepl(PossesionString, pbpDirty$V1)
Team <- gsub(PossesionString, '\\1', pbpDirty[PosessionsT,'V1'])
time <- gsub(PossesionString, '\\2', pbpDirty[PosessionsT,'V1'])
timeW <- cumsum(PosessionsT)
timeW[timeW == 0] = 1
QuartersT <- grepl('Quarter Play', pbpDirty$V1) & !duplicated(pbpDirty$V1)
QuartersW <- cumsum(QuartersT)
QuartersW[QuartersW == 0] = 1
QuartersText <- c('1st', '2nd', '3rd', '4th')
pbp <- data.frame(
scoreText = ifelse(grepl('Â', pbpDirty$V1), NA, as.character(pbpDirty$V1))
,driveText = ifelse(grepl('Â', pbpDirty$V2), NA, as.character(pbpDirty$V2))
,visitingScore = cleanScores(pbpDirty$V3)
,homeScore = cleanScores(pbpDirty$V4)
,GameTime = time[timeW]
,TeamID = Team[timeW]
,Quarter = QuartersText[QuartersW]
) %>%
filter(
!grepl('Quarter Play|DRIVE TOTALS', scoreText) &
!PosessionsT &
! grepl('wins the toss|End of|Timeout', driveText))
Home = getNodeSet(pbpPage, '//*[contains(@class, "home")]//a')
Away = getNodeSet(pbpPage, '//*[contains(@class, "away")]//a')
home = sapply(Home, xmlValue)
away = sapply(Away, xmlValue)
gameId = gsub('(/ncf/playbyplay\\?gameId\\=)([0-9]{1,50})', '\\2', byYear$pbpLink[t])
list(
gameId = gameId
, gameTime = makeTime(timeLoc[1])
, gameLocation = timeLoc[2]
, url = theurl
, teams = c(home[[1]], away[[1]])
, home = home
, away = away
, pbp = pbp)
?devtools::ithub_install
?devtools::github_install
?devtools::install
?devtools::install_github
byYear$pbpLink
roxygen2::roxygenise()
library(RCurl)
