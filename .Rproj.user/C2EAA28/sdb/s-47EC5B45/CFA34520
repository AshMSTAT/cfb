{
    "contents" : "#' @title Identify No Plays\n#' \n#' \n#' @export\n\nParseFumble <- function(x){\n  \n  \n  x$Fumble = FALSE\n  x$FumbleYards = rep(NA, nrow(x))\n  x$Turnover = FALSE\n  \n  # - Rushing Fumble\n  regParse = paste0(\n    '([0-9]{1,4}-[A-Z]\\\\.[A-Za-z]{1,20}) to '\n    ,'([A-Z]{2,4}) ([0-9]{1,3}), FUMBLES\\\\. '\n    ,'([0-9]{1,4}-[A-Z]\\\\.[A-Za-z]{1,20}) to '\n    ,'([A-Z]{2,4}) ([0-9]{1,3}) for '\n    ,'([0-9]{1,3}) yards\\\\.'\n  )\n  \n  Cond <- grepl(regParse, x[,'scoreText'])\n  \n  x$Fumble[Cond] = TRUE\n  x$FumbleYards[Cond] <- as.numeric(\n    gsub(regParse, '\\\\7', x[Cond,'scoreText'])\n    )\n  \n   # - Sacked Fumble\n  regParse2 = paste0(\n    '([0-9]{1,4}-[A-Z]\\\\.[A-Za-z]{1,20}) '\n    ,'sacked at '\n    ,'([A-Z]{2,4} [0-9]{1,3}) '\n    ,'for '\n    ,'(-|)([0-9]{1,3}) (yards|yard), '\n    ,'FUMBLES '\n    ,'(\\\\([0-9]{1,4}-[A-Z]\\\\.[A-Za-z]{1,20}\\\\)\\\\.|[0-9]{1,4}-[A-Z]\\\\.[A-Za-z]{1,20}) to '\n    ,'([A-Z]{2,4} [0-9]{1,3}) for '\n    ,'([0-9]{1,3}) yards\\\\.'\n  )\n  \n  Cond2 <- grepl(regParse2, x[,'scoreText']) & !Cond\n  \n  x$Fumble[Cond2] = TRUE\n  x$FumbleYards[Cond2] <- as.numeric(gsub(regParse2, '\\\\8', x[Cond2,'scoreText']))\n  # - If turnover the recovery player should be in parentheses\n  x$Turnover[Cond2] = grepl('\\\\(', gsub(regParse2, '\\\\6', x[Cond2,'scoreText']))\n  \n  x\n  \n}\n",
    "created" : 1427766208461.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2869102300",
    "id" : "CFA34520",
    "lastKnownWriteTime" : 1427768888,
    "path" : "~/Dropbox/cfb/R/ParseFumble.R",
    "project_path" : "R/ParseFumble.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 22,
    "source_on_save" : false,
    "type" : "r_source"
}