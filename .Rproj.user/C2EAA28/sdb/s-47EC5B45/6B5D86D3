{
    "contents" : "# \n# \n# \n# url = 'http://data.ncaa.com/jsonp/game/football/fbs/2014/09/11/louisiana-tech-north-texas/pbp.json'\n# url = 'http://data.ncaa.com/jsonp/game/football/fbs/2014/12/20/nevada-la-lafayette/pbp.json'\n# url = 'http://data.ncaa.com/jsonp/game/football/fbs/2014/12/20/utah-colorado-st/pbp.json'\n# \n# \n# \n# nn <- NCAApbp(url)\n# \n# # - Drive Details\n#   nn$Down = as.numeric(gsub('[^0-9]','', gsub('(1st|2nd|3rd|4th) and ([0-9]|[0-9][0-9]) at ([A-Z][A-Z][A-Z])([0-9][0-9]|[0-9])','\\\\1', nn$driveText)))\n#   nn$YdsToGo = as.numeric(gsub('(1st|2nd|3rd|4th) and ([0-9]|[0-9][0-9]) at ([A-Z][A-Z][A-Z])([0-9][0-9]|[0-9])','\\\\2', nn$driveText))\n#   nn$FieldPos = gsub('(1st|2nd|3rd|4th) and ([0-9]|[0-9][0-9]) at ([A-Z][A-Z][A-Z])([0-9][0-9]|[0-9])','\\\\3', nn$driveText)\n#   nn$Yardline = as.numeric(gsub('(1st|2nd|3rd|4th) and ([0-9]|[0-9][0-9]) at ([A-Z][A-Z][A-Z])([0-9][0-9]|[0-9])','\\\\4', nn$driveText))\n# \n# # - Incompletes\n#   Cond <- grepl('incomplete. Intended', nn[,1]) & !grepl('Penalty', nn[,1])\n#   nn$Passer[Cond] = gsub('([^,]*) (incomplete. Intended for) ([^,]*)', '\\\\1', nn[Cond,1])\n#   nn$Incomplete[Cond] = TRUE\n#   nn$Incomplete[!Cond] = FALSE\n#   nn$IntendedFor[Cond] = gsub('([^,]*) (incomplete. Intended for) ([^,]*)', '\\\\3', nn[Cond,1])\n# \n# # - Passes\n#   Cond <- grepl('([^,]*) to ([A-Z]{3,}) [0-9]{1,3} for [0-9]{1,3} yards \\\\(([^,]*)\\\\)', nn[,1])\n# #   nn$Passer[Cond] = gsub('([^,]*) (incomplete. Intended for) ([^,]*)', '\\\\1', nn[Cond,1])\n# #   nn$Incomplete[Cond] = TRUE\n# #   nn$Incomplete[!Cond] = FALSE\n# #   nn$IntendedFor[Cond] = gsub('([^,]*) (incomplete. Intended for) ([^,]*)', '\\\\3', nn[Cond,1])\n# \n# \n# \n# # 15-E.McGuire to NEV 18 for 9 yards (26-K.Johnson).\n# \n# \n# # - Field Goals\n# ParseText <- '([0-9][0-9][0-9]-[A-Z\\\\.][^,]*|[0-9][0-9]-[A-Z\\\\.][^,]*|[0-9]-[A-Z\\\\.][^,]*) ([0-9][0-9]|[0-9]) yards Field Goal is (Good.|No Good.)'\n#   Cond <- grepl('Field Goal', nn[,1]) & !grepl('Penalty', nn[,1])\n#   nn$FieldGoal[Cond] = TRUE\n#   nn$FieldGoal[!Cond] = FALSE\n#   nn$Kicker[Cond] = gsub(ParseText, '\\\\1', nn[Cond,1])\n#   nn$FGYards[Cond] = gsub(ParseText, '\\\\2', nn[Cond,1])\n#   nn$FGGood[Cond] = gsub(ParseText, '\\\\3', nn[Cond,1]) == \"Good.\"\n#   \n# # - Kickoffs\n# TouchbackP <- '([0-9][0-9][0-9]-[A-Z\\\\.][^,]*|[0-9][0-9]-[A-Z\\\\.][^,]*|[0-9]-[A-Z\\\\.][^,]*) kicks ([0-9][0-9]|[0-9]) yards from ([A-Z]{3,}) ([0-9][0-9]|[0-9])(.|) to (|[A-Z]{3,}) ( |End Zone.) touchback.'\n# KickoffP <- '([^,]*) kicks ([0-9][0-9]|[0-9]) yards from ([A-Z]{3,}) ([0-9][0-9]|[0-9])\\\\. ([^,]*) to ([A-Z]{3,}) ([0-9][0-9]|[0-9]) for (-?[0-9]{1,3}) yards.'\n# MultiPlayer <- '([0-9][0-9][0-9]-[A-Z\\\\.][^,]*|[0-9][0-9]-[A-Z\\\\.][^,]*|[0-9]-[A-Z\\\\.][^,]*){2,}'\n# \n#   Cond <- grepl('kicks', nn[,1])\n#   nn$Kickoff[Cond] = TRUE\n#   nn$Kickoff[!Cond] = FALSE\n# \n#   nn$Kicker[grepl(TouchbackP, nn[,1])] = gsub(TouchbackP, '\\\\1', nn[grepl(TouchbackP, nn[,1]),1])\n#   nn$Kicker[grepl(KickoffP, nn[,1])] = gsub(KickoffP, '\\\\1', nn[grepl(KickoffP, nn[,1]),1])\n# \n#   nn$KickYards[grepl(TouchbackP, nn[,1])] = as.numeric(gsub(TouchbackP, '\\\\2', nn[grepl(TouchbackP, nn[,1]),1]))\n#   nn$KickYards[grepl(KickoffP, nn[,1])] = as.numeric(gsub(KickoffP, '\\\\2', nn[grepl(KickoffP, nn[,1]),1]))\n# \n#  \n# \n",
    "created" : 1422227514073.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "478281321",
    "id" : "6B5D86D3",
    "lastKnownWriteTime" : 1422735071,
    "path" : "~/Dropbox/cfb/R/Parsepbp.R",
    "project_path" : "R/Parsepbp.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "type" : "r_source"
}